{"version":3,"sources":["components/Buttons/Buttons.jsx","images/img0.png","images/img1.png","images/img2.png","images/img3.png","images/img4.png","images/img5.png","images/img6.png","audio/no.mp3","audio/yeah.mp3","audio/winning.mp3","audio/youreajoke.mp3","components/Hangman/Hangman.jsx","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","className","onClick","click","value","disabled","disable","letter","axios","require","Hangman","useState","wGuesses","setWGuesses","Set","guessed","setGuessed","answer","setAnswer","loaded","setLoaded","hint","setHint","playW","Audio","winning","images","img0","img1","img2","img3","img4","img5","img6","showGuess","split","map","inc","has","useEffect","a","get","response","data","word","toLowerCase","definition","getData","buttonClick","e","prev","add","target","includes","correct","play","wrong","alphaButtons","ltr","idx","gameResults","join","loading","losing","results","src","lose","id","pause","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1607501.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Buttons.css\";\r\n\r\nexport default function Buttons(props) {\r\n  return (\r\n    <button\r\n      className='Buttons-btns'\r\n      onClick={props.click}\r\n      value={props.value}\r\n      disabled={props.disable}>\r\n      {props.letter}\r\n    </button>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/img0.f90b377f.png\";","export default __webpack_public_path__ + \"static/media/img1.5703f18e.png\";","export default __webpack_public_path__ + \"static/media/img2.426ec03b.png\";","export default __webpack_public_path__ + \"static/media/img3.5cacc840.png\";","export default __webpack_public_path__ + \"static/media/img4.5ef07ea1.png\";","export default __webpack_public_path__ + \"static/media/img5.3b527e5d.png\";","export default __webpack_public_path__ + \"static/media/img6.74952d0c.png\";","export default __webpack_public_path__ + \"static/media/no.881861fc.mp3\";","export default __webpack_public_path__ + \"static/media/yeah.4a892e8e.mp3\";","export default __webpack_public_path__ + \"static/media/winning.a50e7dba.mp3\";","export default __webpack_public_path__ + \"static/media/youreajoke.38ead65f.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport Buttons from \"../Buttons/Buttons\";\r\nimport \"./Hangman.css\";\r\nimport img0 from \"../../images/img0.png\";\r\nimport img1 from \"../../images/img1.png\";\r\nimport img2 from \"../../images/img2.png\";\r\nimport img3 from \"../../images/img3.png\";\r\nimport img4 from \"../../images/img4.png\";\r\nimport img5 from \"../../images/img5.png\";\r\nimport img6 from \"../../images/img6.png\";\r\nimport wrong from \"../../audio/no.mp3\";\r\nimport correct from \"../../audio/yeah.mp3\";\r\nimport winning from \"../../audio/winning.mp3\";\r\nimport lose from \"../../audio/youreajoke.mp3\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport default function Hangman() {\r\n  //states\r\n  let [wGuesses, setWGuesses] = useState(0);\r\n  let [guessed, setGuessed] = useState(new Set());\r\n  let [answer, setAnswer] = useState(\"\");\r\n  let [loaded, setLoaded] = useState(false);\r\n  let [hint, setHint] = useState(\"\");\r\n\r\n  let playCorrect = () => {\r\n    new Audio(correct).play();\r\n  };\r\n\r\n  let playWrong = () => {\r\n    new Audio(wrong).play();\r\n  };\r\n\r\n  let playW = new Audio(winning);\r\n\r\n  let playWinning = () => {\r\n    playW.play();\r\n  };\r\n\r\n  let pauseWinning = () => {\r\n    playW.pause();\r\n  };\r\n\r\n  let playLosing = () => {\r\n    new Audio(lose).play();\r\n  };\r\n\r\n  let images = [img0, img1, img2, img3, img4, img5, img6];\r\n\r\n  //showing the Guesses for example. If the word is money and [m,o,y] is guessed it will display as m o _ _ y\r\n  let showGuess = () => {\r\n    let split = answer.split(\"\");\r\n    let showGuess = split.map((inc) => (guessed.has(inc) ? inc : \" _ \"));\r\n    return showGuess;\r\n  };\r\n  //using Axios to hit api to get a random word\r\n  useEffect(() => {\r\n    async function getData() {\r\n      let response = await axios.get(\r\n        \"https://random-words-api.vercel.app/word\"\r\n      );\r\n      setAnswer(response.data[0].word.toLowerCase());\r\n      setLoaded(true);\r\n      setHint(response.data[0].definition);\r\n    }\r\n    return getData();\r\n  }, [loaded]);\r\n\r\n  //Adds guess to guessed letter state. Also adds number to wrong guesses if the guess is not included in the answer\r\n  let buttonClick = (e) => {\r\n    setGuessed((prev) => new Set(prev).add(e.target.value));\r\n    setWGuesses(wGuesses + (answer.includes(e.target.value) ? 0 : 1));\r\n    answer.includes(e.target.value) ? playCorrect() : playWrong();\r\n  };\r\n  //Creating the alphabete buttons\r\n  let alphaButtons = \"abcdefghijklmnopqrstuvwxyz\"\r\n    .split(\"\")\r\n    .map((ltr, idx) => (\r\n      <Buttons\r\n        letter={ltr}\r\n        key={idx}\r\n        value={ltr}\r\n        click={buttonClick}\r\n        disable={guessed.has(ltr)}\r\n      />\r\n    ));\r\n\r\n  //Reset button to set state back to default\r\n  let reset = () => {\r\n    setGuessed(new Set());\r\n    setLoaded(false);\r\n    setWGuesses(0);\r\n    pauseWinning();\r\n  };\r\n\r\n  // setting a variable so that I can pass it through a terrinary operator\r\n  let gameResults = (\r\n    <div>\r\n      <div className='Hangman-word'>{showGuess()}</div>\r\n      <div>Hint: {hint}</div>\r\n      {answer == showGuess().join(\"\") ? <div>You Win!</div> : alphaButtons}\r\n      {answer == showGuess().join(\"\") ? playWinning() : null}\r\n    </div>\r\n  );\r\n  // loading page\r\n  let loading = (\r\n    <div className='hangman-body'>\r\n      <div className='hangman-bg hangman-flex'>\r\n        <div className='hangman-c'></div>\r\n        <div className='hangman-line'></div>\r\n        <div className='hangman-r1'></div>\r\n        <div className='hangman-r2'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // Set the losing display\r\n  let losing = (\r\n    <div>\r\n      <div>The answer is: {answer}</div>\r\n      <div>You Lose, lmao, what are you a LOSER?</div>\r\n    </div>\r\n  );\r\n\r\n  let results = (\r\n    <div className='Hangman'>\r\n      <h1>Hangman</h1>\r\n      <div className='Hangman-img'>\r\n        <img src={images[wGuesses]} />\r\n      </div>\r\n      <div>Wrong Guesses:{wGuesses}/6</div>\r\n      {wGuesses >= 6 ? losing : gameResults}\r\n      {wGuesses == 6 ? playLosing() : null}\r\n      <button id='reset' onClick={reset}>\r\n        Reset?\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return <div>{loaded ? results : loading}</div>;\r\n}\r\n","import \"./App.css\";\nimport Hangman from \"./components/Hangman/Hangman\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Hangman />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}